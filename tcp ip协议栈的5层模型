1，物理层
tcp/ip五层模型的最下面是物理层，它负责透明的传输比特流。
有了物理层，设备之间才有了通信的基础。就像我们说话一样，有了空气这种介质以及振动信号，声音才能从我的嘴巴传输到你的耳朵里。
但是这种传输默认是杂乱的、无目的地、不受控的。这个时候就需要上层的协议来规范。
这个时候就用到了我们的数据链路层。

 2，数据链路层
据链路层负责硬件设备之间的数据帧的传送和识别，例如帧同步、冲突检测等。
类似我们在说一句话的时候总是有开始信号（你好？）和结束信号一样（长久的停顿）。有了数据链路层的规范，发送方和接收方才能有效地传输一段数据。
这样在局域网内设备跟设备之间才能有效地通信。
但是我们的设备不可能都在一个地方，这就要求数据的传输有跨局域网、跨网段的需求。

 3，网络层
这个就需要网络层来实现了，网络层常见协议是ip协议。
网络负责数据的分片、寻址和路由。
有了ip协议，数据包才能突破设备之间直连才能通信的限制，通过转发的方式实现了数据包的跨网段传输；
有了ip协议，数据包才不用担心不同设备传输能力不同的限制；
但是这种传输还是设备到设备的。而我们一般通信的主体其实是系统上面的各个应用程序。这些应用程序，需要端到端的可靠传输。

 4，传输层
这个就需要传输层来实现了，其中tcp实现字节流的可靠传输，而udp则是一种无连接的数据报协议。
基于tcp和udp之上，最上层就是我们的应用层协议，应用层协议负责应用程序的沟通。
不同的tcp或者udp端口用来区分不同的应用程序。

5，应用层
应用程序有很多，通信方式各不相同。所以，有不同的应用协议。
一些应用程序被广泛使用，他们的协议也被规范下来，比如tftp, telnet, ftp, snmp, smtp, ntp等。

最后，为了方便大家做网络应用开发，在linux里提供了socket套接字接口。
使用socket套接字以及相关的API，我们就可以方便地开发我们自己的网络应用程序了。
到这里， 关于tcp/ip的五层协议就讲完了，大家都学会了吗?

以上只是大方向的概述，如果想深入学习linux下的网络协议栈，也欢迎大家订阅我的《linux网络协议栈从应用层到内核层》，学完以后你对linux网络的理解也就更加通透了。
